markdown_go/TODO

2015-04-01
    * commonTests_test.go should wrap all tests in Go's version of
        try/catch
    * Ex 1,2,229 and section 2.2 of spec: [tab in the first position is 
        ignored], then tabs are expanded to spaces, with tab tops at 
        columns 4,8,12,...  Only text is considered in counting.

2015-04-01
    * REWRITE commonTests as a go program which iterates over all       * DONE
        examples, with output only where actual != expected.  Output    * DONE
        is example number, input, expected output, actual output.       * DONE

    * to elminate most commonTests failures, Doc.GetHtml() should       * DONE
        ensure that last character is newline (\n')                     * DONE
        - currently 544/545 test outputs contain 'obtained'             * YEP
            * permitting terminating CR/LF makes this 432               * YEP
            * adding newline where missing makes it 428                 * YEP
            * adding newline to H_RULE     makes it 426                 * YEP
            * more fiddlint with H_RULE    makes it 422                 * YEP

2015-03-31
    * where appropriate rename eol and lineLen EOL
    * any test involving uints and minus signs is suspect

2015-03-31
    * FIX: exe blows up on spec.txt -- error is not captured
    * check.all 
        - blockquote-nested-multiplereturn-level1 panics
        - blockquote-nested-return-level1 panics
        - list-blockquote fails
        - list-code fails
        - list-multiparagraphs fails
        - list-multiparagraphs-tabs fails
        - paragraph-trailing-tab fails
        - unordered-list-paragraphs fails
        - unordered-list-with-indented-content fails
    * write python script which convents commonmark/test-dumped.json    * DROP
        into directory of pairs: NNN.md and NNN.out                     * DROP
        - then write script check.common.pairs which runs through       * DROP
            these systematically                                        * DROP
    * low-priority: fix markdown-testsuite to conform to commonmark
        - ok to just drop non-conforming tests that fail
        - but should identify covering commonmark test

2015-03-30
    * executable needs name other than xgoMarkdown (cannot be simply
        markdown_go !)
    * standard test should compare "cmark commonmark/spec.txt"          * DONE
        output (spec.html) with that from xgoMarkdown                   * DONE
        - this is check.spec                                            * DONE
    * executable must not REQUIRE a .md extension                       * DONE
        - if .md absent but file exists, use name, otherwise try        * DONE
            appending .md                                               * DONE
    * create output directory if it doesn't exist                       * DONE

2015-03-28
    * split from xgo/md, making this project markdown_go                * DONE

2015-03-08
    * change to use https://github.com/jgm/CommonMark as source for
        markdown tests

2014-06-04 (prep for splitting off as separate project on github)
    * move xgoMarkdown from xgo/cmd into md/cmd subdirectory            * DONE
    * create local version.go                                           * DONE
    * create local CHANGES                                              * DONE
    * create local README.md doc/ doc/index.md                          * DONE
    * add local LICENSE.md                                              * DONE

2014-03-18 (edited from -08)
    * accept HTML *inline* elements
        - verify Markdown IS interpreted in such elements
    * accept HTML *block* elements 
        - verify Markdown not interpreted in such blocks

2014-03-18
    * drop after74, after89 branches                                    * DONE
2014-03-17
    * any new md work to be done in a branch of that name; create it    * DONE

2014-03-15
    * clean up parser.go, holder.go, elsewhere as required,			    * DONE
        removing leftovers from handling blockquotes with			    * DONE
        goroutines (a rough cleanup, need to look at code again)		* DONE
2014-03-04
    * look at extensions under https://github.com/karlcow/markdown-testsuite
    * consider //http://kramdown.gettalong.org/syntax.html
    * clean up KLUDGE at holder.go, about L 456                         * DONE?
2014-02-19
    * verify can round-trip fencedCodeBlock
2014-02-07
    * automatic email addresses: match randomization algorithm!
2014-02-05
    * FIX: para.go claims that each Para has a LineSeq associated with
        it, but there is no such element in the struct
    * add "fencing", 3 or 4 backticks + optional language to start
        codeblock and 3 or 4 backticks to end
        - CodeBlock.String() should produce this
        - See Metastackflow 125148
        - also https://help.github.com/articles/github-flavored-markdown
2014-01-18
    * linkReference.go appears to be dead code, so DROP
2014-01-14
    * xgoMarkdown should be able to parse source trees like
        /usr/local/src/html5-boilerplace/doc/*.md
        which contain links to file names with a .md extension;
        these should automatically be processed into trees which
        can be rendered as HTML
2014-01-09
    * fix: most blockquote tests fail                                   * DONE
2013-12-28
    * handle the 11 blockquote tests
2014-01-01
    * link-idref-angle-bracket requires (?) argument for channel 
        to tell parseHolder() that we are done
2013-12-29
    * then parser should have context stack
    * the various Get() routines should return HTML5 OM, not text
    * need a String() for everything
2013-12-26
    * why can't I declare Document.blocks as []BlockI ?
    * test linkRefSpan with dictionary
2013-12-23
    * loops in parseLinkDefinition are messy; rework to follow 
        those in parseImageDef
2013-12-16
    * a line consisting of nothing but hash signs should simply be 
        output as text; in other words, it gets appended to nonSeps
